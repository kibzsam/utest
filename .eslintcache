[{"/Users/mb96-3/Projects/Sam/utest/src/index.js":"1","/Users/mb96-3/Projects/Sam/utest/src/App.js":"2","/Users/mb96-3/Projects/Sam/utest/src/reportWebVitals.js":"3","/Users/mb96-3/Projects/Sam/utest/src/datepicker/index.js":"4","/Users/mb96-3/Projects/Sam/utest/src/cp/index.js":"5","/Users/mb96-3/Projects/Sam/utest/src/rechart/index.js":"6"},{"size":500,"mtime":1612422547576,"results":"7","hashOfConfig":"8"},{"size":6483,"mtime":1612526380028,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612422547577,"results":"10","hashOfConfig":"8"},{"size":1690,"mtime":1612422547576,"results":"11","hashOfConfig":"8"},{"size":1696,"mtime":1612526435170,"results":"12","hashOfConfig":"8"},{"size":1201,"mtime":1612422547577,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1qfoiln",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/Users/mb96-3/Projects/Sam/utest/src/index.js",[],["30","31"],"/Users/mb96-3/Projects/Sam/utest/src/App.js",["32"],"import React, { useState, useRef, useEffect } from \"react\"\nimport './App.css';\nimport DatePicker from './datepicker';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport { Typography } from '@material-ui/core';\nimport Cell from './cp';\nimport Chart from './rechart';\nimport BackupOutlinedIcon from '@material-ui/icons/BackupOutlined';\nimport { differenceInDays, parse, differenceInHours } from 'date-fns';\n\nconst useStyles = makeStyles((theme) => ({\n  divider: {\n    width: '100%',\n  },\n  value: {\n    marginLeft: 5\n  },\n  file: {\n    borderRadius: \"15px\",\n    border: \"3px solid grey\",\n    width: '10%',\n    height: \"70px\",\n    display: \"flex\",\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: \"center\",\n    cursor: 'pointer'\n  },\n  fileIcon: {\n    width: \"100%\",\n    height: '100%',\n    color: \"purple\"\n  }\n}));\n\nconst status = [\n  {\n    title: 'C1',\n    date: 'dd-mm-yyyy',\n    value: 'xxx.xx.xxxx'\n  },\n  {\n    title: 'C2',\n    date: 'dd-mm-yyyy',\n    value: 'xxxx.xxx.xx'\n  },\n  {\n    title: 'C3',\n    date: 'dd-mm-yyyy',\n    value: 'xxxxx.xx.xx'\n  },\n  {\n    title: 'C4',\n    date: 'dd-mm-yyyy',\n    value: 'xx.xx.xx'\n  },\n  {\n    title: 'C5',\n    date: 'd-mm-yyyy',\n    value: 'xxx.xxx.xx'\n  },\n  {\n    title: 'C6',\n    date: 'dd-m-yyyy',\n    value: 'xxx.xx.xxx'\n  },\n]\nconst regions = [\n  {\n    header: {\n      label: 'xx'\n    },\n    latestData: {\n      price: 1234.4,\n      date: \"dd-mmm-YYYY\",\n      is_dblclicked: 0,\n    },\n    history: [{\n      price: 456.7,\n      date: \"dd-mmm-YYYY\",\n      is_dblclicked: 0\n    }],\n    config: {\n      display_name: 'xxx',\n      forecolor: '#ABABAB',\n      backcolor: '#CECECE',\n      can_dbl_click: 0,\n      dblclick_fontstyle: 'font-weight:800'\n    }\n  },\n  {\n    header: {\n      label: 'xx'\n    },\n    latestData: {\n      price: 1234.4,\n      date: \"dd-mmm-YYYY\",\n      is_dblclicked: 0,\n    },\n    history: [{\n      price: 456.7,\n      date: \"dd-mmm-YYYY\",\n      is_dblclicked: 0\n    }],\n    config: {\n      display_name: 'xxx',\n      forecolor: '#ABABAB',\n      backcolor: '#CECECE',\n      can_dbl_click: 0,\n      dblclick_fontstyle: 'font-weight:800'\n    }\n  },\n  {\n    header: {\n      label: 'xx'\n    },\n    latestData: {\n      price: 1234.4,\n      date: \"dd-mmm-YYYY\",\n      is_dblclicked: 0,\n    },\n    history: [{\n      price: 456.7,\n      date: \"dd-mmm-YYYY\",\n      is_dblclicked: 0\n    }],\n    config: {\n      display_name: 'xxx',\n      forecolor: '#ABABAB',\n      backcolor: '#CECECE',\n      can_dbl_click: 0,\n      dblclick_fontstyle: 'fontWeight:800'\n    }\n  }\n]\nfunction App() {\n  const classes = useStyles();\n  const [date, setDate] = useState(new Date());\n  const [data, setData] = useState([]);\n  const [pos, setPos] = useState(0);\n  const file = useRef(null);\n\n  const handleFiles = () => {\n    var reader = new FileReader();\n    reader.readAsText(file.current.files[0]);\n    reader.onload = (e) => {\n      var allTextLines = e.target.result.split(/\\r\\n|\\n/);\n      var lines = [];\n      for (var i = 0; i < allTextLines.length; i++) {\n        var data = allTextLines[i].split(',');\n        var tarr = [];\n        for (var j = 0; j < data.length - 2; j++) {\n          let temp = data[j];\n          if (i !== 0) {\n            if (j === 0) {\n              temp = parse(temp, 'dd/MM/yy', new Date())\n            } else {\n              temp = parseFloat(temp);\n            }\n            tarr.push(temp);\n          }\n        }\n\n        if (i !== 0) {\n          lines.push({\n            x: tarr[0],\n            y: tarr.slice(1)\n          });\n        }\n      }\n      lines.pop();\n      setData(lines);\n    };\n\n    reader.onerror = err => {\n      console.err(err);\n      alert(err);\n    };\n  };\n\n  useEffect(() => {\n    let p = data.findIndex(l => differenceInDays(l.x, date) >= 0);\n    setPos(p);\n    console.log(p);\n    // eslint-disable-next-line\n  }, [date])\n\n  return (\n    <>\n      <Box m={10} mb={0} className={classes.file} onClick={() => file.current.click()}>\n        <BackupOutlinedIcon className={classes.fileIcon}></BackupOutlinedIcon>\n        <input type=\"file\" hidden ref={r => file.current = r} onChange={handleFiles}></input>\n      </Box>\n      <Box m={10} mt={1} border=\"1px solid grey\">\n        {\n          pos > -1 &&\n          <Chart data={data.slice(pos)} />\n        }\n        <Divider />\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" m={3} mb={0}>\n          <DatePicker date={date} setDate={setDate} />\n        </Box>\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" m={3} mt={2} mb={1}>\n          <Box component=\"span\" minWidth={5} />\n          <Typography variant=\"h6\">{date.toISOString().substring(0, 10)}</Typography>\n          <Box component=\"span\" minWidth={70} />\n          <Typography variant=\"subtitle1\">Open:</Typography>\n          <Typography variant=\"subtitle1\" className={classes.value}>{differenceInHours(data[pos]?.x, date) > 10 ? 0 : data[pos]?.y[0]}</Typography>\n          <Box component=\"span\" minWidth={40} />\n          <Typography variant=\"subtitle1\">High: </Typography>\n          <Typography variant=\"subtitle1\" className={classes.value}>{differenceInHours(data[pos]?.x, date) > 10 ? 0 : data[pos]?.y[1]}</Typography>\n          <Box component=\"span\" minWidth={40} />\n          <Typography variant=\"subtitle1\">Low: </Typography>\n          <Typography variant=\"subtitle1\" className={classes.value}>{differenceInHours(data[pos]?.x, date) > 10 ? 0 : data[pos]?.y[2]}</Typography>\n          <Box component=\"span\" minWidth={40} />\n          <Typography variant=\"subtitle1\">Close: </Typography>\n          <Typography variant=\"subtitle1\" className={classes.value}>{differenceInHours(data[pos]?.x, date) > 10 ? 0 : data[pos]?.y[3]}</Typography>\n        </Box>\n        <Divider />\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" m={2} mt={2} mb={1}>\n          {\n            regions.map((item, index) => (\n              <Cell\n                key={index}\n                title={item.header.label}\n                value={item.latestData.price}\n                border={index === regions.length - 1 ? false : true}\n                date={item.latestData.date}\n                fontWeight={item.config.dblclick_fontstyle}\n                latestData={item.latestData}\n                history={item.history}\n              />\n            ))\n          }\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n","/Users/mb96-3/Projects/Sam/utest/src/reportWebVitals.js",[],"/Users/mb96-3/Projects/Sam/utest/src/datepicker/index.js",[],"/Users/mb96-3/Projects/Sam/utest/src/cp/index.js",["33","34"],"import React, { useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport useDoubleClick from 'use-double-click';\r\nimport ReactDOM from \"react-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Divider, Typography } from '@material-ui/core';\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    padding: 5\r\n  },\r\n});\r\n\r\nexport default function BasicTable({ title, date, value, border, fontWeight, latestData, history }) {\r\n  const classes = useStyles();\r\n  const [weight, setWeight] = useState('');\r\n  const singleClick = () => {\r\n    if (Object.entries(latestData).length !== 0) {\r\n      history.push(latestData);\r\n      console.log(history);\r\n      latestData.is_dblclicked = false\r\n    }\r\n  }\r\n\r\n  const doubleClick = () => {\r\n    if (Object.entries(latestData).length !== 0) {\r\n      console.log(fontWeight);\r\n      setWeight(fontWeight);\r\n      console.log(\"Double click\");\r\n    }\r\n  }\r\n  const boxRef = useRef();\r\n  useDoubleClick({\r\n    onSingleClick: e => singleClick(),\r\n    onDoubleClick: e => doubleClick(),\r\n    ref: boxRef,\r\n    latency: 250\r\n  });\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" flex={1} borderRight={border ? \"1px solid grey\" : null} ref={boxRef}>\r\n      <Typography variant=\"h5\" align=\"center\" className={classes.title}>{title}</Typography>\r\n      <Divider></Divider>\r\n      <Box display=\"flex\" flexDirection=\"column\" alignItems='center' pt={1} pb={1}>\r\n        <Typography variant=\"subtitle2\" align=\"center\">{date}</Typography>\r\n        <Box component=\"span\" minHeight={5}></Box>\r\n        <Typography variant=\"subtitle2\" align=\"center\" style={{ fontWeight: 800 }} >{value}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}","/Users/mb96-3/Projects/Sam/utest/src/rechart/index.js",["35","36"],"import React, { useCallback } from 'react';\r\nimport EChart from 'react-apexcharts'\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'candlestick',\r\n    height: 350\r\n  },\r\n  title: {\r\n    text: 'CandleStick Chart',\r\n    align: 'left'\r\n  },\r\n  xaxis: {\r\n    type: 'datetime',\r\n  },\r\n  plotOptions: {\r\n    candlestick: {\r\n      colors: {\r\n        upward: '#00B746',\r\n        downward: '#EF403C'\r\n      },\r\n      wick: {\r\n        useFillColor: true\r\n      }\r\n    }\r\n  },\r\n  selection: {\r\n    enabled: true,\r\n    type: 'x',\r\n    fill: {\r\n      color: '#24292e',\r\n      opacity: 0.1\r\n    },\r\n    stroke: {\r\n      width: 1,\r\n      dashArray: 3,\r\n      color: '#24292e',\r\n      opacity: 0.4\r\n    },\r\n    xaxis: {\r\n      min: undefined,\r\n      max: undefined\r\n    },\r\n    yaxis: {\r\n      min: undefined,\r\n      max: undefined\r\n    }\r\n  },\r\n  yaxis: {\r\n    tooltip: {\r\n      enabled: true\r\n    }\r\n  }\r\n}\r\n\r\nexport default function Chart({data}) {\r\n  const series = useCallback(() => {\r\n    return [\r\n      {\r\n        data: data\r\n      }\r\n    ]\r\n  }, [JSON.stringify(data)])();\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      <EChart options={options} series={series} type=\"candlestick\" height={350} />\r\n    </div>\r\n  )\r\n}",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":38,"column":7,"nodeType":"43","messageId":"44","endLine":38,"endColumn":13},{"ruleId":"41","severity":1,"message":"45","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":16},{"ruleId":"41","severity":1,"message":"46","line":15,"column":10,"nodeType":"43","messageId":"44","endLine":15,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":63,"column":6,"nodeType":"49","endLine":63,"endColumn":28,"suggestions":"50"},{"ruleId":"47","severity":1,"message":"51","line":63,"column":7,"nodeType":"52","endLine":63,"endColumn":27},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'status' is assigned a value but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'weight' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["55"],"React Hook useCallback has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [data]",{"range":"58","text":"59"},[1035,1057],"[data]"]